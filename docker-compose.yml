 version: '2'
 volumes:
  collected_static: {}
 services:

  # CTS Django front-end
  cts_django:
    build: .
    image: cts-uwsgi-django:latest
    expose:
    - "8080"
    volumes:
    - collected_static:/src/collected_static
    # - .:/src  # map ubertool_cts/ to /src for updating without rebuilding images
    environment:
    - REDIS_HOSTNAME=redis
    links:
    - redis

  # # Redis (message broker)
  redis:
    image: redis:latest
    hostname: redis
    ports:
    - "6379:6379"

  # NGINX web server
  nginx:
#    restart: always
    # build: /home/npope/CTS/cts_nginx
    image: cts-nginx:stable
    # image: popenc/cts-nginx:stable
    ports:
    - "80:80"
    - "443:443"
    links:  # Same as depends_on cts_django, but also sets the hostname at which this service can reach the linked service
    - cts_django:uwsgi  # Nginx.conf can reference "cts_django" service with the hostname 'uwsgi' or 'cts_django'
    - cts_nodejs:cts_nodejs
    volumes_from:
    - cts_django:ro  # Mount all volumes from "cts_django" to NGINX, so it can access the collected static files

  cts_nodejs:
    # build: /home/npope/CTS/cts_nodejs
    image: cts-nodejs:latest
    expose:
      - "4000"
    environment:
      - NODEJS_HOST=cts_nodejs
      - NODEJS_PORT=4000
      - REDIS_HOSTNAME=redis
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    links:
      - redis
      - worker_chemaxon
      - worker_epi
      - worker_test
      - worker_sparc
      - worker_measured

  # # Celery worker - ChemAxon calc
  worker_chemaxon:
    # build: /home/npope/CTS/cts_celery
    image: cts-celery:latest
    command: celery worker -A tasks -Q chemaxon -l info -n chemaxon_worker -c 2
    # command: bash -c "sleep 3 && celery -A tasks worker -Q chemaxon --loglevel=info --concurrency=1 -n chemaxon_worker"
    links:
    - redis
    environment:
    - REDIS_HOSTNAME=redis

  # # Celery worker - EPI Suite calc
  worker_epi:
    image: cts-celery:latest
    # image: cts-celery:epi
    command: celery worker -A tasks -Q epi -l info -n epi_worker -c 1
    links:
    - redis
    environment:
    - REDIS_HOSTNAME=redis

  # # Celery worker - TEST calc
  worker_test:
    image: cts-celery:latest
    # image: cts-celery:test
    command: celery worker -A tasks -Q test -l info -n test_worker -c 1
    links:
    - redis
    environment:
    - REDIS_HOSTNAME=redis

  # # Celery worker - SPARC calc
  worker_sparc:
    image: cts-celery:latest
    # image: cts-celery:sparc
    command: celery worker -A tasks -Q sparc -l info -n sparc_worker -c 1
    links:
    - redis
    environment:
    - REDIS_HOSTNAME=redis

  # # Celery worker - Measured (EPI) calc
  worker_measured:
    image: cts-celery:latest
    # image: cts-celery:measured
    command: celery worker -A tasks -Q measured -l info -n measured_worker -c 1
    links:
    - redis
    environment:
    - REDIS_HOSTNAME=redis